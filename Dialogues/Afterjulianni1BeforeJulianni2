import pygame
from spriteshit import SpriteSheet

pygame.init()
w, h = 1920, 1280
canvas = pygame.Surface((w, h))
window = pygame.display.set_mode((w, h))
pygame.display.set_caption("Dialogue Box Example")

# Load and scale background
background = pygame.image.load("pngs/vinebg.jpg").convert()
background = pygame.transform.scale(background, (w, h))

# Load sprites
knight_inactive = SpriteSheet('spritesheets/knight-idle-inactive.png')
knight_active = SpriteSheet('spritesheets/knight-idle.png')
wizard_inactive = SpriteSheet('spritesheets/wizard-idle-inactive.png')
wizard_active = SpriteSheet('spritesheets/Idle.png')

# Extract sprites
knight = knight_active.get_sprite(0, 128, 128, 9, 'Red')
wizard_img = wizard_active.get_sprite(0, 128, 128, 11, 'Red')
wizard = pygame.transform.flip(wizard_img, True, False)

# Positions
knight_pos = (-100, 165)
wizard_pos = (890, -90)

# Dialogue box properties
dialogue_width = 1800
dialogue_height = 400
dialogue_x = (w - dialogue_width) // 2
dialogue_y = h - dialogue_height - 50

# Create the dialogue box surface once (with alpha)
dialogue_box = pygame.Surface((dialogue_width, dialogue_height), pygame.SRCALPHA)
dialogue_box.fill((255, 255, 255, 180))  # White, semi-transparent

# Load font (default pygame font, size 36)
font = pygame.font.SysFont(None, 36)

# Dialogue text lines
dialogue_lines = [
    "*To escape, knight must still complete another room*",
    "*One whose goals aren't clear yet*",
    "I'm warning you knight! -wizard",
    "As former comrades, I've given you far too many chances -wizard",
    "I do not care! The princess must be saved -knight",
    "When all of this is over, I'll bear witness to Phsymoria's rise. -knight",
    "Very well... You chose this path! -wizard",
    "*The wizard leaves*",
]

# Load sound effect for space press
click_sound = pygame.mixer.Sound("assets/sfx/dialogue-blip.mp3")

# Current dialogue index and finished flag
current_line = 0
dialogue_finished = False

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE and not dialogue_finished:
                click_sound.play()
                current_line += 1
                if current_line >= len(dialogue_lines):
                    dialogue_finished = True  # No more lines

    # Clear canvas
    canvas.fill((0, 0, 0) if dialogue_finished else (255, 255, 255))

    if not dialogue_finished:
        # Draw background
        canvas.blit(background, (0, 0))

        # Draw sprites
        canvas.blit(wizard, wizard_pos)
        canvas.blit(knight, knight_pos)

        # Draw dialogue box
        canvas.blit(dialogue_box, (dialogue_x, dialogue_y))

        # Render and center text inside dialogue box
        text = dialogue_lines[current_line]
        text_surface = font.render(text, True, (0, 0, 0))  # Black text
        text_rect = text_surface.get_rect()
        text_rect.center = (dialogue_x + dialogue_width // 2, dialogue_y + dialogue_height // 4)
        canvas.blit(text_surface, text_rect)

    # Update window
    window.blit(canvas, (0, 0))
    pygame.display.update()
